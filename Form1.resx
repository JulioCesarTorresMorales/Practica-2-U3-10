<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wgARCAEXAqADASIAAhEBAxEB/8QA
        GwABAAMAAwEAAAAAAAAAAAAAAAQFBgECAwf/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/2gAMAwEAAhAD
        EAAAAtUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8ehJefiSgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAQMXvPnctnfUO41kJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHXsjD3N9yfPN96c2AoAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABU0hsXnXlojyEEeWQrrGwFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe
        Xrm83N7XC67eZ2a89ZL7+uQ9o03TD7Ux28+fb6zuyPjLtGO11ncKARfKJ6DxU9A5JyAJ6DwT0HgnoHJO
        QBPQeCeg8E9A5JyAJ6DwT0HgnoHukgKAAAAAAAAAAAAAAAApLvJZsbZ5/QbxgPoOA2M1BxNnbS2Vhmfe
        5p99ntDVL07eeb3u6O8s7BQIHhbIquLZVT2tBUrYVfW2FVxbCp7WgqVsKvrbCr62wqe1oKlbCr62wq+t
        sKmVMICgAAAAAAAAAAAAAAAMBv48RrHjmzH6iQXrzyIOd2A45AAAAAAAAAcHLxHsAAAADwqrfNRqO1fY
        WAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADL6jyj5ru8b9B1PUjZslnNHYeGEl+hKGss2Ljlc70n8Fty
        ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIkuizc19Bx2y3iuym8i43hNDxpd4YO+pM7g/Qvn+51mYJQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEeQiNJLAXjkIEr1EP29gAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/9oA
        DAMBAAIAAwAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLJMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg
        kYkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwjaK84MAAoQQAgQQAgQQAgQEAAAAAAAAAAAAAAAA
        BHWwx2TaMACLAAADAAABAAABBEAAAAAAAAAAAAAAAABUIDAAAAAAAAAAAQwAAAADEoAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABFgEs4kiiEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATPYsgQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABKEADBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAgADAAAAEPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPMPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPABPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPLxzfPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNfN+/wDzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzyqAw8cDXDzzvDDDDDDDDDDDDDPzzzzzzzzzzzzzzzzy68jDNK17zz/AM8888888c88
        8c/88888888888888888fPM8cc888888888488888zf888888888888888888888888888888888px6+
        rr009888888888888888888888888888888888rV5FQG888888888888888888888888888888888888
        v/s8ss88888888888888888888888888888888888888888888888888888888888888888888888888
        88888888888888888888888888888888888888888888888888888888888888888888888888888888
        8888888888888888888888888888/8QAMxEAAgAEAwYDBQkAAAAAAAAAAQIAAxExEiFBBBAiUFFhEzDR
        IEBgsfAkMkJScHGBkcH/2gAIAQIBAT8A+LBnaBmaDlMpzLnlltTOFQSJYC5k68oNSMoVQssoNdYViJYl
        nOnxcnGaLDcLYTeCCpoYZgoqYKlb8lmvhHb5RJUJKCHIdf2jZbHaDewiW4eWzm6w0uskmZlUQrYtmlue
        kKwYBhrGA4cWm8EG3nAE29yn5gL1I9f8ja8lCDQQrBNklmApkr4r3YjKNuJb7v4rfXaJowIsoaCFrhGK
        8cOHvvAAFB5wJFvcilXDaCJr+IxbrEvgl+HpXdLGB8dzp2gmuflDO3tYirCudTaJqhHKjkTitCbCJLfZ
        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
        AP/Z
</value>
  </data>
</root>